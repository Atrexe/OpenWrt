#!/bin/sh

[ "$DEVTYPE" = "partition" ] || exit

DEVICE="$DEVNAME"
case "$DEVICE" in
sd*) ;;
md*) ;;
hd*) ;;
mmcblk*) ;;
*) exit ;;
esac

[ -f /var/run/config/samba ] || {
	mkdir -p /var/run/config && touch /var/run/config/samba
}

. /lib/functions.sh

get_auto_share() {
	local auto_share_value
	config_get auto_share_value "$1" auto_share 0
	[ "$auto_share_value" -eq 1 ] && auto_share=1
}

get_auto_share_ro() {
	local auto_share_ro_value
	config_get auto_share_ro_value "$1" auto_share_ro 0
	[ "$auto_share_ro_value" -eq 1 ] && auto_share_ro=1
}

auto_share=0
auto_share_ro=0
config_load samba
config_foreach get_auto_share samba
config_foreach get_auto_share_ro samba

mkdir -p /var/lock
lock /var/lock/autosamba.lock

need_reload=0

[ "$ACTION" = "add" ] && {
	mount=$(grep "^/dev/${DEVICE}[[:space:]]" /proc/mounts | awk 'NR==1{print $2}')
	uuid="$(block info | grep "^/dev/${DEVICE}:[[:space:]]\+" | awk -F "[[:space:]]UUID=\"" '{print $2}' | awk -F "\"" '{print $1}' | tr 'A-Z' 'a-z' | sed 's/[^0-9a-z]//g')"
	[ -n "$mount" ] && [ -n "$uuid" ] && {
		uuid="00000$uuid"
		label="auto_share_${uuid:0-6}"
		read_only="no"
		[ "$auto_share_ro" -eq 1 ] && read_only="yes"
		uci -q -c /var/run/config batch <<-EOF
			set samba.$DEVICE="sambashare"
			set samba.$DEVICE.name="$label"
			set samba.$DEVICE.path="$mount"
			set samba.$DEVICE.browseable="yes"
			set samba.$DEVICE.read_only="$read_only"
			set samba.$DEVICE.guest_ok="yes"
			set samba.$DEVICE.create_mask="0666"
			set samba.$DEVICE.dir_mask="0777"
			commit samba
		EOF
		[ "$auto_share" -eq 1 ] && need_reload=1
	}
}

[ "$ACTION" = "remove" ] && {
	[ "$(uci -q -c /var/run/config get "samba.$DEVICE")" = "sambashare" ] && {
		uci -q -c /var/run/config batch <<-EOF
			delete samba.$DEVICE
			commit samba
		EOF
		[ "$auto_share" -eq 1 ] && need_reload=1
	}
}

[ "$need_reload" -eq 1 ] && /etc/init.d/samba reload

lock -u /var/lock/autosamba.lock
